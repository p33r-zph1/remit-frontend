/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthHistoryImport } from './routes/_auth/history'
import { Route as AuthOrderOrderIdIndexImport } from './routes/_auth/order/$orderId/index'
import { Route as AuthOrderOrderIdShowQrImport } from './routes/_auth/order/$orderId/showQr'
import { Route as AuthOrderOrderIdScanQrImport } from './routes/_auth/order/$orderId/scanQr'

// Create Virtual Routes

const AuthAlertsLazyImport = createFileRoute('/_auth/alerts')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAlertsLazyRoute = AuthAlertsLazyImport.update({
  path: '/alerts',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/alerts.lazy').then((d) => d.Route))

const AuthHistoryRoute = AuthHistoryImport.update({
  path: '/history',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/history.lazy').then((d) => d.Route))

const AuthOrderOrderIdIndexRoute = AuthOrderOrderIdIndexImport.update({
  path: '/order/$orderId/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/order/$orderId/index.lazy').then((d) => d.Route),
)

const AuthOrderOrderIdShowQrRoute = AuthOrderOrderIdShowQrImport.update({
  path: '/order/$orderId/showQr',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/order/$orderId/showQr.lazy').then((d) => d.Route),
)

const AuthOrderOrderIdScanQrRoute = AuthOrderOrderIdScanQrImport.update({
  path: '/order/$orderId/scanQr',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/order/$orderId/scanQr.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/history': {
      preLoaderRoute: typeof AuthHistoryImport
      parentRoute: typeof AuthImport
    }
    '/_auth/alerts': {
      preLoaderRoute: typeof AuthAlertsLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/order/$orderId/scanQr': {
      preLoaderRoute: typeof AuthOrderOrderIdScanQrImport
      parentRoute: typeof AuthImport
    }
    '/_auth/order/$orderId/showQr': {
      preLoaderRoute: typeof AuthOrderOrderIdShowQrImport
      parentRoute: typeof AuthImport
    }
    '/_auth/order/$orderId/': {
      preLoaderRoute: typeof AuthOrderOrderIdIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([
    AuthHistoryRoute,
    AuthAlertsLazyRoute,
    AuthIndexRoute,
    AuthOrderOrderIdScanQrRoute,
    AuthOrderOrderIdShowQrRoute,
    AuthOrderOrderIdIndexRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
